@model WebApp.Models.VideoGames.VideoGamesViewModel

@{
    ViewBag.Title = "Games List";
    Layout = "_Layout";
}

<style>
    .games-list {
        list-style: none;
        padding: 0;
    }

    .game-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        background-color: #f9f9f9;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .game-card:hover {
        transform: scale(1.02);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }

    .game-title {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 8px;
        color: #333;
    }

    .game-genre, .game-publishers {
        font-size: 1rem;
        margin-bottom: 5px;
        color: #555;
    }

    .game-publishers a {
        color: #007bff;
        text-decoration: none;
        font-weight: bold;
    }

    .game-publishers a:hover {
        text-decoration: underline;
    }

    .pagination {
        margin-top: 20px;
        text-align: center;
    }

    .pagination a, .pagination span {
        margin: 0 5px;
        padding: 5px 10px;
        text-decoration: none;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f0f0f0;
        color: #333;
    }

    .pagination a:hover {
        background-color: #007bff;
        color: white;
    }

    .pagination span.current-page {
        font-weight: bold;
        background-color: #007bff;
        color: white;
        border: 1px solid #007bff;
    }

    .pagination span {
        cursor: default;
    }
</style>

<h2>Lista gier</h2>

<a asp-action="Add" class="btn btn-primary mb-3">Dodaj grę</a>

@if (Model.Games != null && Model.Games.Any())
{
    <ul class="games-list">
        @foreach (var game in Model.Games)
        {
            <li class="game-card">
                <div class="game-title">@game.GameName</div>
                <div class="game-genre"><strong>Gatunek:</strong> @(game.Genre?.GenreName ?? "N/A")</div>
                <div class="game-publishers">
                    <strong>Wydawcy:</strong>
                    @if (game.GamePublishers != null && game.GamePublishers.Any())
                    {
                        @foreach (var publisher in game.GamePublishers)
                        {
                            @if (publisher.Publisher != null)
                            {
                                <a href="@Url.Action("Details", "Publishers", new { id = publisher.Publisher.Id })">
                                    @publisher.Publisher.PublisherName
                                </a>
                            }

                            @if (game.GamePublishers.LastOrDefault() != publisher)
                            {
                                @: ,  
                            }
                        }
                    }
                    else
                    {
                        <span>Brak</span>
                    }
                </div>
            </li>
        }
    </ul>
}

<div class="pagination">
    @if (Model.TotalPages > 1)
    {
        <a href="@Url.Action("Index", new { page = 1 })">Początek</a>

        @if (Model.CurrentPage > 1)
        {
            <a href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })">Poprzednia</a>
        }

        int maxPagesToShow = 5;
        int startPage = Math.Max(1, Model.CurrentPage - 2);
        int endPage = Math.Min(Model.TotalPages, startPage + maxPagesToShow - 1);

        for (int i = startPage; i <= endPage; i++)
        {
            if (i == Model.CurrentPage)
            {
                <span class="current-page">@i</span>
            }
            else
            {
                <a href="@Url.Action("Index", new { page = i })">@i</a>
            }
        }

        if (endPage < Model.TotalPages)
        {
            <a href="@Url.Action("Index", new { page = Model.TotalPages })">@Model.TotalPages</a>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })">Następna</a>
        }

        <a href="@Url.Action("Index", new { page = Model.TotalPages })">Ostatnia</a>
    }
</div>


